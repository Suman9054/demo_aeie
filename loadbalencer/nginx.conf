user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr="$upstream_addr" '
                    'upstream_response_time="$upstream_response_time" '
                    'request_time="$request_time"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limits
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

    # HTTPS upstream using domain names (SNI compatible)
    upstream AEIE_API_service {
        server aeie-club-server-1.onrender.com:443 max_fails=3 fail_timeout=30s weight=1;
        server aeie-club-server.onrender.com:443 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # TLS settings for upstream
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";

    server {
        listen 10000;
        server_name _;

        # Handle CORS preflight
        location @options {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-API-Key, Accept, Origin, User-Agent" always;
            add_header Access-Control-Max-Age "86400" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # API location
        location ~ ^/api/ {
            if ($request_method = OPTIONS) {
                return 204;
            }

            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;

            proxy_pass https://AEIE_API_service;

            proxy_ssl_server_name on;    # enable SNI
            proxy_ssl_verify off;        # disable cert verification (only safe for trusted upstreams)
            proxy_ssl_protocols TLSv1.2 TLSv1.3;

            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_timeout 120s;
            proxy_next_upstream_tries 2;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host; # pass the original domain name
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Original-URI $request_uri;

            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;

            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            proxy_temp_file_write_size 64k;
        }

        # Default root endpoint
        location / {
            add_header Content-Type text/plain;
            return 200 'AEIE Club Load Balancer - Running\nVersion: 1.0\nUpstream: AEIE_API_service';
        }

        # Security rules
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            return 404;
        }
        location ~* \.(php|pl|py|rb|sh|bash)$ {
            deny all;
            return 403;
        }
        location ~* (eval\(|base64_decode|gzinflate|\.\./) {
            deny all;
            return 403;
        }
    }
}
